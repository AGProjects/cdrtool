
Starting with version 4.9 it is possible to store call details records in
automatically rotated radacct tables by using MySQL 5.0 stored procedures.

The auto-rotation minimizes platform downtime related to mysql tables
optimizations or purging.

This implementation has been contributed by Andrei Magureanu
<uskratos@gmail.com>


How to setup auto-rotation
--------------------------

1. Load radius_accounting.proc into the mysql server. MySQL 5.0 or bigger
version and SUPER priviledges are required.

2. Patch the Freeradius server mysql client to allow stored procedures.
Instructions can be found in ../freeradius directory. Re-compile and
re-install Freeradius server.

3. Copy radius_accounting.conf to sql.conf to the Freeradius server. Edit
the new sql.conf with the database connection information.

4. Update MediaProxy configuration to use the stored procedure for
accounting, instead of the UPDATE query

5. In CDRTool, change global.inc table name to:
                    "table"              => "radacct".date("Ym"),
 

The modus operandi of the stored procedure
------------------------------------------

Currently, call detail records generated by the OpenSER SIP Proxy are stored
into a central radius.radacct table. The radacct table grows and must be
manually purged, the purge operation locks the table for writing, which is
blocking the application that performs the queries, and this situation is
unacceptable.

The radacct tables are populated with data as follows: 

At any given moment in time when a SIP session starts, an INSERT query
generated by the Freeradius server inserts data into MySQL a radacctYYYYMM
table (e.g. radacct200611). Later, when a SIP session ends, an UPDATE query
sets various fields of the previous inserted record. The server that
performs the INSERT matches the inserted data based on some indices present
in the table. Alos MediaProxy UPDATE the accounting table with media
information.

The CDR data will be stored in monthly tables that have a name based on the
following syntax:

radacct%Y%m

Examples:

radacct200611 (November table)
radacct200612 (December table)

The stored procedure achieves the following:

On INSERT 

The radacct table is created automatically if missing. If an INSERT query
fails with the mysql code table not available, the table is created and the
INSERT query is performed in the new table. The table is created using the
same schema, which is retrieved from the existing radacct table (show create
table radacct). The table name is derived form the current month as
determined from the AcctStartTime field present in the INSERT query.

ON UPDATE

The procedure detects if the UPDATE query has failed because the record does
not exist in the current table and update the record in the previous table
by substracting one calendar month, redefining the table name and retry the
query.

The table name is derived from the AcctStopTime fields present in the
UPDATE query.

Below is an example of how the procedures can be used from sql.conf:

-- TEST INSERT RECORD PROCEDURE
CALL insert_radacct_record(
'000c3412-90f10088-13e83559-2ff3f85b@10.0.0.100', '84e90e657ee8e7fe', '31208005167@ag-projects.com',
'31208005167@ag-projects.com', '81.23.228.139', '5060', '2005-02-20 14:57:54', '0','0', '0', '0', 
'sip:67@ag-projects.com', 'sip:31208005167@ag-projects.com', '200', 'Sip-Session', '', '', '0', '0', 
'200', 'Invite', 'sip:1000000@vm.dns-hosting.info', 'as095af1cc', '000f341290f100ae19b10a86-4d85cf07');

-- TEST UPDATE RECORD PROCEDURE
CALL update_radacct_record('2005-02-20 15:11:24', '201', 0, '', 
'000c3412-90f10088-13e83559-2ff3f85b@10.0.0.100', 'as095af1cc', 
'000f341290f100ae19b10a86-4d85cf07', '81.23.228.139');


