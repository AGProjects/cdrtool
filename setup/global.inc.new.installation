<?

#
# 1. Change all hostnames and passwords according to the installation
# 2. Copy this file to /var/www/CDRTool/global.inc
#
ini_set('memory_limit','256M');

###########################################
# System and web paths

$CDRTool['tld']    = "/CDRTool";
$CDRTool['Path']   = "/var/www/CDRTool";
$_PHPLIB['libdir'] = $CDRTool['Path']. "/phplib/";
include($_PHPLIB["libdir"] . "prepend.php3");
$global_local    = $CDRTool['Path']."/global.inc.local";

###########################################
# PHP Error reporting
$errorReporting = (E_ALL & ~E_NOTICE);
$errorReporting = 1; 	// comment this out to enable PHP warnings
error_reporting($errorReporting);

###########################################
# Service provider information 

$CDRTool['provider']['name']                  = "Provider name";
$CDRTool['provider']['service']               = "SIP service";
$CDRTool['provider']['timezone']              = "Europe/Amsterdam";
$CDRTool['provider']['fromEmail']             = "support@example.com";
$CDRTool['provider']['toEmail']               = "support@example.com";
$CDRTool['provider']['sampleLoginSubscriber'] = "number@example.com";
$CDRTool['provider']['sampleLoginDomain']     = "example.com";

###########################################
# Rating engine settings
$RatingEngine=array("socketIP"               => "IP.address.of.the.private.interface.of.cdrtool.example.com",
                    "socketPort"             => "9024",
                    "CDRS_class"             => "ser_radius",
                    "prepaid_lock"           => true,
                    "log_delay"              => 0.05,
                    "split_rating_table"     => true,
                    "csv_delimiter"          => ",",
                    "priceDenominator"       => 10000, // e.g. 1 Eur = 10000 units
                    "priceDecimalDigits"     => 4,     // how many digits to round the prices to
                    "minimumDurationCharged" => 0,     // Only calls greater than this duration will be charged
                    "durationPeriodRated"    => 60,    // the prices from the rating table are calculated per this period
                    "trafficSizeRated"       => 1024,  // same as above but for data traffic
                    "reportMissingRates"     => 0,	   // send email notifications if rates are missing from the ratingEngine
                    "minimumDuration"        => 0      // minimum duration to rate, if call duration is shorter the price is zero
                    );

###########################################
# Normalize engine settings
$CDRTool['normalize']['defaultCountryCode']      = "31";

###########################################
# Anti-fraud settings
# create group quota in OpenSER and deny calls to users in this group
# $UserQuota["default"]["traffic"]  = 5000;            // MBytes
$UserQuota["default"]["cost"]     = 1000;              // Euro

###########################################
# CDRTool datasources

class DB_CDRTool extends DB_Sql {
  var $Host     = "sipdb";
  var $Database = "cdrtool";
  var $User     = "cdradmin";
  var $Password = "PASSWORD";
  var $Halt_On_Error ="yes";
}

class DB_Locker extends DB_Sql {
  var $Host     = "sipdb";
  var $Database = "cdrtool";
  var $User     = "locker";
  var $Password = "PASSWORD";
  var $Halt_On_Error ="no";
}

class DB_radius extends DB_Sql {
  var $Host     = "sipdb";
  var $Database = "radius";
  var $User     = "radius";
  var $Password = "PASSWORD";
  var $Halt_On_Error ="no";
}

class DB_radius2 extends DB_Sql {
  var $Host     = "sipdb2";
  var $Database = "radius";
  var $User     = "radius";
  var $Password = "PASSWORD";
  var $Halt_On_Error ="no";
}

class DB_subscribers extends DB_Sql {
  var $Host     = "sipdb";
  var $Database = "openser";
  var $User     = "openser";
  var $Password = "PASSWORD";
}

class DB_openser extends DB_Sql {
  var $Host     = "sipdb";
  var $Database = "openser";
  var $User     = "openser";
  var $Password = "PASSWORD";
  var $Halt_On_Error ="no";
}

$replicated_databases=array('cluster1'=>array(
                                              "db1"=>array('ip'      =>'10.0.0.131',
                                                               'slave_of'=>'db-log2',
                                                               'user'    =>'process',
                                                               'password'=>'password',
                                                               'replication_user'    =>'replication',
                                                               'replication_password'=>'password',
                                                               'active_master' => true
                                                               ),
                                              "db2"=>array('ip'      =>'10.0.0.132',
                                                               'slave_of'=>'db-log1',
                                                               'user'    =>'process',
                                                               'password'=>'password',
                                                               'replication_user'    =>'replication',
                                                               'replication_password'=>'password'
                           )                                    )
                 );
                 
class DomainAuthLocal extends DomainAuth {	// defined in phplib/local.inc
}

class PageLayoutLocal extends PageLayout {      // defined in phplib/local.inc
}

# To customize E164 normalization
class E164_custom extends E164 {      // defined in library/cdr_lib.phtml
}
# $CDRTool['normalize']['E164Class']           = "E164_custom";


$DATASOURCES=array(
"unknown"=>array(
                    "class"              => "CDRS_unknown" // leave it here
                    ),
"ser_radius"=>array(
                    "name"               => "OpenSER",
                    "class"              => "CDRS_ser_radius",
                    "table"              => "radacct",
                    "db_class"           => array("DB_radius2","DB_radius"),  
                    "rating"             => "1",
                    "normalizedField"    => "Normalized",
                    "UserQuotaClass"     => "SERQuota",
                    "UserQuotaNotify"    => "1",
                    "mediaDispatcher"    => "10.0.0.1",
                    "purgeCDRsAfter"     => 120, // how many days to keep the CDRs
                    "SIPProxies"         =>array("11.123.28.150"=>"node01",  // friendly names in sip trace table
                                                 "13.49.725.105"=>"node02",
                                                )
                    ),
"asterisk_vm"  =>array("name"            => "Voicemail server",
                    "class"              => "CDRS_asterisk",
                    "table"              => "asterisk_cdr",
                    "db_class"           => "DB_radius",
                    "rating"             => "1",
                    "normalizedField"    => "Normalized",
                    "contexts" 		 => array(
                                            "SIP"=>array("WEBName"=>"OpenSER"),
                                            ),
                    "traceInURL"         => array(
                                            "SIP"=>"ser_radius"
                    			    		),
                    "traceOutURL"        => array(),
                    "purgeCDRsAfter"    => 180 // how many days to keep the CDRs
                    ),
"sip_trace"   =>array(
                    "name"               => "SIP trace",
                    "db_class"           => "DB_openser",
                    "table"              => "sip_trace",
                    "purgeRecordsAfter"  => "7",
                    "invisible"          => 1 
                    )
);

// load CDRTool libraries 
$CDRToolModules=array("ser","asterisk","rating");

if ($_SERVER['REMOTE_ADDR']=="10.0.0.1") {
    //$verbose=1;
} else {
    // prevent set of verbose via post/get
    unset($verbose);
}
?>
