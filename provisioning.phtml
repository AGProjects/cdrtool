<?

/*
    Copyright (c) 2007 AG Projects
    http://ag-projects.com
    Author Adrian Georgescu

    This page provides the functions for managing SIP accounts,
    ENUM ranges, ENUM numbers, Trusted Peers, LCR, Rating plans
    on a remote NGN-Pro server
*/

include("./global.inc");
set_time_limit(600);

page_open(
            array("sess" => "CDRTool_Session",
                  "auth" => "CDRTool_Auth",
                  "perm" => "CDRTool_Perm")
         );

$title="SIP and ENUM provisioning";

if (is_readable("local/header.phtml")) {
    include("local/header.phtml");
} else {
    include("header.phtml");
}

$perm->check("provisioning");

$layout = new pageLayoutLocal();
$layout->showTopMenu($title);

global $CDRTool;

$login_credentials=array();

if ($CDRTool['impersonate']) {
    if (preg_match("/^([1-9][0-9]*)\.([1-9][0-9]*)$/",$CDRTool['impersonate'],$m)) {
        $_customer=$m[1];
        $_reseller=$m[2];

		$login_credentials=array(
                        'customer'           => $_customer,
                        'reseller'           => $_reseller,
                        'login_type'          => 'admin'
                        );

    } else if (preg_match("/^(\[1-9][0-9]*)$/",$CDRTool['impersonate'],$m)) {
        $_customer=$m[1];
		$login_credentials=array(
                        'customer'           => $_customer,
                        'reseller'           => $_customer,
                        'login_type'          => 'admin'
                        );
    } else if ($CDRTool['impersonate'] == '0' || $CDRTool['impersonate'] = '0.0') {
		$login_credentials=array(
                        'login_type'          => 'admin'
                        );
    } else {
        page_close();
        printf ("Error: Invalid impersonate value %s",$CDRTool['impersonate']);
        exit;
    }

} else {
    page_close();
    printf ("Please define impersonate field for login account <b>%s</b>",$auth->auth["uname"]);
    exit;
}

require_once("ngnpro_soap_library.phtml");
require_once("ngnpro_client_lib.phtml");

if (file_exists("ngnpro_engines.inc")) {
	include("ngnpro_engines.inc");
} else {
    page_close();
    printf ("Error: you must copy setup/ngnpro_engines.inc.sample to ngnpro_engines.inc and edit it before trying again");
    exit;
}

if ($resellerFilters[$login_credentials['reseller']]) {
	$login_credentials['soap_filter']      = $resellerFilters[$login_credentials['reseller']]['soap_filter'];
    $login_credentials['record_generator'] = $resellerFilters[$login_credentials['reseller']]['record_generator'];
} else if ($resellerFilters['default']) {
	$login_credentials['soap_filter']      = $resellerFilters['default']['soap_filter'];
    $login_credentials['record_generator'] = $resellerFilters['default']['record_generator'];
}

$login_credentials['reseller_filters'] = $resellerFilters;

if ($_REQUEST['generatorId']) {
    $generator  = new recordGenerator($_REQUEST['generatorId'],$recordGenerators,$soapEngines,$login_credentials);
    if ($_REQUEST['action']=='Generate') {
        $generator->generateRecords();
        $generator->showGeneratorForm();
    } else {
        $generator->showGeneratorForm();
    }
} else {
	$SoapEngine = new SoapEngine($_REQUEST['service'],$soapEngines,$login_credentials);
    $_class     = $SoapEngine->records_class;
    $RECORDS    = new $_class(&$SoapEngine);

    $RECORDS->showWelcomeMessage();

    if ($_REQUEST['action']=='Add')    $RECORDS->addRecord();
    if ($_REQUEST['action']=='Copy')   $RECORDS->copyRecord();
    if ($_REQUEST['action']=='Delete') $RECORDS->deleteRecord();
    if ($_REQUEST['action']=='Update') $RECORDS->updateRecord();

    if ($_REQUEST['action']=='PerformActions') {
        $RECORDS->executeActions();
    } else {
        $RECORDS->listRecords();
    }
}

$layout->showFooter();

print "
</body>
</html>
";

page_close();
?>